Element.scrollIntoView defines a parameter 'block=start|end' that controls
if the target element should be srolled to upper or lower boundary of the
viewport.

I've emulated this behaviour in Smooth Scroll and added a third option 'auto' 
that chooses the placement based on the shortest scrolling distance.

Please note that my pull request has been rejected, so if you update the library
you also need to re-apply this patch to make the code work as intended.

diff -r a4df9de1a093 -r 093d5e9ae84b ui/js/lib/smooth-scroll.js
--- a/ui/js/lib/smooth-scroll.js	Sun Jul 16 17:52:43 2017 +0200
+++ b/ui/js/lib/smooth-scroll.js	Sun Jul 16 18:59:40 2017 +0200
@@ -40,7 +33,12 @@
 
 		// Callback API
 		before: function () {},
-		after: function () {}
+		after: function () {},
+
+		// Scroll to the start or end of the element.
+		// Use 'auto' to let Smooth Scrolling decide on
+		// scroll direction.
+		block: 'start'
 	};
 
 
@@ -260,14 +258,32 @@
 	 */
 	var getEndLocation = function ( anchor, headerHeight, offset ) {
 		var location = 0;
+		var anchorHeight = anchor.clientHeight;
+		var viewportHeight = getViewportHeight();
+		var maxLocation = getDocumentHeight() - viewportHeight;
 		if (anchor.offsetParent) {
 			do {
 				location += anchor.offsetTop;
 				anchor = anchor.offsetParent;
 			} while (anchor);
 		}
-		location = Math.max(location - headerHeight - offset, 0);
-		return Math.min(location, getDocumentHeight() - getViewportHeight());
+
+		var startLocation = Math.min(Math.max(location - headerHeight - offset, 0), maxLocation);
+		var endLocation = Math.min(location + anchorHeight + offset - viewportHeight, maxLocation);
+		if (settings.block === 'end') {
+			return endLocation;
+		} else if (settings.block === 'auto') {
+			var scrollStartDistance = Math.abs(startLocation - root.pageYOffset);
+			var scrollEndDistance = Math.abs(endLocation - root.pageYOffset);
+			if (scrollStartDistance < scrollEndDistance) {
+				return startLocation;
+			} else {
+				return endLocation;
+			}
+		} else {
+			// Legacy behaviour
+			return startLocation;
+		}
 	};
 
 	/**
