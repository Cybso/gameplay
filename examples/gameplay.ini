; gameplay.ini

;------------------------------------------------------------------------------
; Frontend configuration
;------------------------------------------------------------------------------
[frontend]

; Enable this to hide the 'Exit' button from the sidebar menu.
; The user will not be able to exit the launcher with a gamepad
; (also he still will be able to press CTRL-Q or ALT-F4 on a keyboard).
# disable-exit=false

;------------------------------------------------------------------------------
; Event listeners - commands that will be executed on various
; application events. This can be used to disable a screensaver
; while an app is running and enable it when the launcher
; gains focus again.
;
; Application events (app-*) can access the following environment variables:
;
;   GAMEPLAY_APP_ID
;      Internal unique application ID
;
;   GAMEPLAY_APP_PID
;      The running applications process ID
;
;   GAMEPLAY_APP_STATUS
;      The process status, one of:
;      running, sleeping, disk_sleep, stopped, tracing_stop, zombie, dead
;      wake_kill, waking, idle (osx, freebsd), locked (freebsd),
;      waiting (freebsd), suspended (netbsd)
;
; The command is executed as shell command, so environment variables likes
; PATH are available and logical operators like '||' and '&&' can be used.
;------------------------------------------------------------------------------
[events]
; Command that is executed when an application has been started
# app-start=

; Command that is executed when an application has been suspended by the user
# app-suspend=

; Command that is executed when a suspended application has been resumed
# app-resume=

; Command that is executed when a running application has been terminated.
# app-exit=

; The following directives can be used to detect a focused by idling launcher.
; When an 'idle-timeout' (in seconds) greater than 0 is defined the event
; 'idle' will be executed when the application is focused and the user hasn't
; done any UI interaction for more than 'idle-timeout' seconds.
;
; When the application has been idled and the user pressed a button, moved the
; cursor or the launcher uses the focus the command configured in the 'busy'
; event will be executed.
# idle-timeout=0
# idle=
# busy=

;------------------------------------------------------------------------------
; Configure the 'Steam' application provider. This is required if you have
; Steam installed but the provider fails to detect the application's directory.
;------------------------------------------------------------------------------
[providers/steam]
; Set this to false to disable Steam provider
# enabled = true

; The full path to or command for the Steam executable (steam.exe).
# executable = "c:\Program Files\Steam\Steam.exe"

; The location of the 'steamapps' folder
# steamapps = "c:\Program Files\Steam\Steamapps"

;------------------------------------------------------------------------------
; Configure the 'Emulator' application provider.
;------------------------------------------------------------------------------
[providers/emulator]
; Set this to false to disable Emulator provider
# enabled = true

; Location of 'emulators.ini' (default: same directories as gameplay.ini)
# config = path/to/emulators.ini

;------------------------------------------------------------------------------
; Configure the 'System' application provider (Linux only)
;------------------------------------------------------------------------------
[providers/system]
; Space separated List of Desktop file categories that should be listed. An
; empty list means 'all'.
;
; See https://standards.freedesktop.org/menu-spec/latest/apa.html for possible
; values.
# categories = 
